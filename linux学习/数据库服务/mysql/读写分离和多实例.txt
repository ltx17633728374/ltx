mysql读写分离:
	在调度服务器装包:
		yum -y installl maxscale-2.1.2-1.rhel.7.x86_64.rpm
	备份配置文件:
		cp /etc/maxscale.conf /root/maxscale.conf
	修改配置文件:
		vim /ect/maxscale.conf
		....
		[maxscale]
		threads=auto    #根据服务器cpu核数自动起进程数
		....
		[server1]
		type=server
		address=192.168.4.51    #master主机ip
		port=3306
		protocol=MySQLBackend
		
		[server2]
		type=server
		address=192.168.4.52    #slave主机ip
		port=3306
		protocol=MySQLBackend		
		....
		[MySQL Monitor]
		type=monitor
		module=mysqlmon
		servers=server1,server2
		user=user1                #定义可访问的用户
		passwd=123qqq...A         #定义访问密码
		monitor_interval=10000 
		....
		#[Read-Only Service]   #把默认的只读配置注释掉
		#type=service
		#router=readconnroute
		#servers=server1
		#user=myuser
		#passwd=mypwd
		#router_options=slave
		....		
		[Read-Write Service]
		type=service
		router=readwritesplit
		servers=server1,server2    #定义数据库服务器
		user=user2                 #定义写入用户
		passwd=123qqq...A          #定义密码
		max_slave_connections=100%
		....
		[MaxAdmin Service]      #管理服务
		type=service
		router=cli
		....
		#[Read-Only Listener]    #注释掉只读
		#type=listener
		#service=Read-Only Service
		#protocol=MySQLClient
		#port=4008
		....
		[MaxAdmin Listener]      #管理服务的监听
		type=listener
		service=MaxAdmin Service
		protocol=maxscaled
		socket=default
		port=4026           #指定4026为它的端口
	
	创建监视用户:
		grant replication slave, replication client on *.* to
		->user1@'%' identified by '123qqq...A';
	创建查询用户:
		grant select on mysql.* to user2@"%" identified by "123qqq...A";
	 启动服务:
		maxscale -f /etc/maxscale.cnf
		ss -ntlup | grep maxscale

多实例:
	tar -zxvf mysql-5.7.20-linux-glibc2.12-x86_64.tar.gz
	mv mysql-5.7.20-linux-glibc2.12-x86_64 /usr/local/mysql
	mv /etc/my.cnf /root                #移走原来的配置文件
	vim /etc/my.cnf                     #新建配置文件
		[mysqld_multi]       #多实例的配置
		mysqld = /usr/local/mysql/bin/mysqld_safe
		mysqladmin = /usr/local/mysql/bin/mysqladmin
		user = root	
		[mysqld1]
		datadir=/data3307          #指定数据库1的目录
		port=3307
		log-error=/data3307/mysql3307.log
		pid-file=/data3307/mysql3307.pid
		socket=/data3307/mysql3307.socket    #指定socket文件
		[mysqld2]
		datadir=/data3308          #指定数据库2的目录
		port=3308
		log-error=/data3307/mysql3308.log
		pid-file=/data3307/mysql3308.pid
		socket=/data3307/mysql3308.socket    #指定socket文件

		mkdir /data3307 /data3308      #创建两个数据库的目录文件

		chmod -R +x /usr/local/mysql/bin
			#给多实例数据库的命令加权限
		/usr/local/mysql/bin/mysqld_multi start 1
			#初始化数据库1
/usr/local/mysql/bin/mysql -uroot -p'GLekMS:.8u#<' -S /data3307/mysql3307.socket
		#进入数据1,-S选项后面跟数据库1的socket文件
		/usr/local/mysql/bin/mysqld_multi stop 1
			#停止数据库1













































































































































































